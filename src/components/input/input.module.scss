@use "../mixins" as *;

.Input {
  position: relative;
  text-align: left;

  &.validating {
  }

  &.invalid.dirty:not(.validating) {
    label:after {
      width: 100%;
      background: var(--theme-color-error);
    }
  }

  &.focused:not(.validating) {
    label:after {
      width: 100%;
    }
  }

  &.validatingLine {
    label:after {
      width: 100%;
      @include stripe-lines-animation;
    }
  }

  label {
    position: relative;
    border-bottom: 1px solid var(--theme-border-color);
    display: flex;
    gap: var(--theme-spacing);
    align-items: center;

    &:after {
      content: "";
      position: absolute;
      top: calc(100% - 1px);
      left: 50%;
      transform: translateX(-50%);
      width: 0;
      height: 2px;
      background: var(--theme-color-primary);
      transition: width 250ms;
    }
  }

  input, textarea {
    flex: 1;
    background: none;
    color: inherit;
    font: inherit;
    text-align: inherit;
    text-transform: inherit;
    line-height: 1.6;
    width: 100%;

    &:invalid {
      box-shadow: none;
    }

    &::placeholder {
      color: inherit;
      opacity: .75;
    }
  }

  textarea {
    line-height: 1.2;
    overflow: overlay;
    resize: vertical;
    min-height: 2rem;
    max-height: calc(100vh - 260px);
    field-sizing: content; /* allow textarea grow by it's content */
  }

  fieldset:disabled &,
  &.disabled {
    opacity: .5;
    pointer-events: none;
  }

  .inputInfo {
    display: flex;
    gap: var(--theme-spacing);

    .errors {
      flex: 1;
      color: var(--theme-color-error);
      font-size: small;
    }

    .maxLengthIndicator {
      margin-left: auto;
      text-align: right;
      font-size: 80%;
      padding: calc(var(--theme-spacing) / 3);
    }
  }
}
