@use "../colors" as *;
@use "../mixins" as *;

.InputTranslation {
  .input {
    flex: 1;

    label {
      padding-bottom: var(--theme-spacing-half);
    }

    a {
      cursor: pointer;
    }
  }

  .rememberTextIcon {
    &.active {
      opacity: .5;
    }
  }

  .source-languages {
    .link:not(:last-child) {
      margin-right: .25em;

      &:after {
        content: ",";
      }
    }
  }

  .translation-results {
    &.rtl {
      direction: rtl;
    }

    .translation {
      margin-bottom: var(--theme-spacing);

      .value {
        white-space: pre-line;
      }

      .transcription {
        margin-left: var(--theme-spacing-half);
        opacity: .75;
      }
    }

    .lang {
      padding-left: var(--theme-spacing);
      white-space: nowrap;
      line-height: 2;
      opacity: .5;
    }

    .link {
      @include pseudo-link;
    }

    .dictionary {
      margin-top: var(--theme-spacing);

      * {
        vertical-align: top;
      }

      .word-type {
        font-weight: bold;
        padding: var(--theme-spacing-half);
      }

      .word {
        padding: 0 var(--theme-spacing-double);
      }

      .word-meanings {
      }

      .examples {
        cursor: help;
        margin-left: 5px;
        font-weight: bold;
      }
    }
  }

  .translation-error {
    color: $red-300;
  }

  .hint {
    opacity: .55;
    padding-right: 60px; // input's max-length block
  }
}