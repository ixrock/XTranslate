@use "../theme" as *;

.Icon {
  $size: var(--icon-size, 22px);

  --icon-size-small: 18px;
  --icon-size-big: 26px;
  --icon-color-active: black;
  --icon-bgc-active: transparent;

  font-size: $size;
  width: $size;
  height: $size;

  display: inline-flex;
  flex-shrink: 0;
  font-style: normal;
  vertical-align: middle;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  user-select: none;
  color: inherit;
  box-sizing: content-box; // allow to use padding for outer spacing

  &.small {
    $size: var(--icon-size, var(--icon-size-small));
    font-size: $size;
    width: $size;
    height: $size;
  }

  &.big {
    $size: var(--icon-size, var(--icon-size-big));
    font-size: $size;
    width: $size;
    height: $size;
  }

  > span {
    width: 100%;
    height: 100%;
    display: inherit;
  }

  // material-icon
  &.material {
    > span {
      font-family: "MaterialIcons-XTranslate";
      font-size: inherit;
      font-weight: normal;
      font-style: normal;
      display: inline-block;
      line-height: 1;
      text-transform: none;
      letter-spacing: normal;
      word-wrap: normal;
      white-space: nowrap;
      direction: ltr;

      /* Support for all WebKit browsers. */
      -webkit-font-smoothing: antialiased;
      /* Support for Safari and Chrome. */
      text-rendering: optimizeLegibility;
      /* Support for Firefox. */
      -moz-osx-font-smoothing: grayscale;
      /* Support for IE. */
      font-feature-settings: 'liga';
    }
  }

  // inline svg icon
  &.svg {
    box-sizing: content-box;

    svg {
      pointer-events: none;
      width: 100%;
      height: 100%;
    }

    &:not(.colorful) {
      svg {
        * {
          fill: currentColor;
        }

        line {
          stroke: currentColor;
        }
      }
    }
  }

  &.disabled {
    opacity: .5;
    color: inherit !important;
    cursor: not-allowed !important;
  }

  &.active {
    color: var(--icon-color-active);
    box-shadow: 0 0 0 3px var(--icon-bgc-active);
    background-color: var(--icon-bgc-active);
  }

  &.interactive {
    cursor: pointer;
    transition: 250ms color, 250ms opacity, 150ms background-color, 150ms box-shadow;
    border-radius: 50%;

    &.focusable:focus {
      @extend .active;
    }

    &:hover {
      @extend .active;
    }
  }
}

@include theme-dark {
  .Icon {
    --icon-color-active: white;
  }
}